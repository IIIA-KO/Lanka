// <auto-generated>
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Lanka.Modules.Campaigns.Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "campaigns");

            migrationBuilder.CreateTable(
                name: "bloggers",
                schema: "campaigns",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    first_name = table.Column<string>(type: "text", nullable: false),
                    last_name = table.Column<string>(type: "text", nullable: false),
                    email = table.Column<string>(type: "text", nullable: false),
                    birth_date = table.Column<DateOnly>(type: "date", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_bloggers", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "blocked_dates",
                schema: "campaigns",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    blogger_id = table.Column<Guid>(type: "uuid", nullable: false),
                    date = table.Column<DateOnly>(type: "date", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_blocked_dates", x => x.id);
                    table.ForeignKey(
                        name: "fk_blocked_dates_bloggers_blogger_id",
                        column: x => x.blogger_id,
                        principalSchema: "campaigns",
                        principalTable: "bloggers",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "pacts",
                schema: "campaigns",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    last_updated_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    blogger_id = table.Column<Guid>(type: "uuid", nullable: false),
                    content = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_pacts", x => x.id);
                    table.ForeignKey(
                        name: "fk_pacts_bloggers_blogger_id",
                        column: x => x.blogger_id,
                        principalSchema: "campaigns",
                        principalTable: "bloggers",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "offers",
                schema: "campaigns",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    pact_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                    description = table.Column<string>(type: "character varying(500)", maxLength: 500, nullable: false),
                    price_currency = table.Column<string>(type: "text", nullable: false),
                    last_cooperated_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_offers", x => x.id);
                    table.ForeignKey(
                        name: "fk_offers_pacts_pact_id",
                        column: x => x.pact_id,
                        principalSchema: "campaigns",
                        principalTable: "pacts",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "campaigns",
                schema: "campaigns",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    description = table.Column<string>(type: "character varying(250)", maxLength: 250, nullable: false),
                    price_currency = table.Column<string>(type: "text", nullable: false),
                    offer_id = table.Column<Guid>(type: "uuid", nullable: false),
                    client_id = table.Column<Guid>(type: "uuid", nullable: false),
                    creator_id = table.Column<Guid>(type: "uuid", nullable: false),
                    status = table.Column<int>(type: "integer", nullable: false),
                    scheduled_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    pended_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
                    confirmed_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    rejected_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    cancelled_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    done_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    completed_on_utc = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_campaigns", x => x.id);
                    table.ForeignKey(
                        name: "fk_campaigns_bloggers_client_id",
                        column: x => x.client_id,
                        principalSchema: "campaigns",
                        principalTable: "bloggers",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_campaigns_bloggers_creator_id",
                        column: x => x.creator_id,
                        principalSchema: "campaigns",
                        principalTable: "bloggers",
                        principalColumn: "id");
                    table.ForeignKey(
                        name: "fk_campaigns_offers_offer_id",
                        column: x => x.offer_id,
                        principalSchema: "campaigns",
                        principalTable: "offers",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_blocked_dates_blogger_id_date",
                schema: "campaigns",
                table: "blocked_dates",
                columns: new[] { "blogger_id", "date" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_bloggers_email",
                schema: "campaigns",
                table: "bloggers",
                column: "email",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_campaigns_client_id",
                schema: "campaigns",
                table: "campaigns",
                column: "client_id");

            migrationBuilder.CreateIndex(
                name: "ix_campaigns_creator_id",
                schema: "campaigns",
                table: "campaigns",
                column: "creator_id");

            migrationBuilder.CreateIndex(
                name: "ix_campaigns_offer_id",
                schema: "campaigns",
                table: "campaigns",
                column: "offer_id");

            migrationBuilder.CreateIndex(
                name: "ix_offers_pact_id",
                schema: "campaigns",
                table: "offers",
                column: "pact_id");

            migrationBuilder.CreateIndex(
                name: "ix_pacts_blogger_id",
                schema: "campaigns",
                table: "pacts",
                column: "blogger_id",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "blocked_dates",
                schema: "campaigns");

            migrationBuilder.DropTable(
                name: "campaigns",
                schema: "campaigns");

            migrationBuilder.DropTable(
                name: "offers",
                schema: "campaigns");

            migrationBuilder.DropTable(
                name: "pacts",
                schema: "campaigns");

            migrationBuilder.DropTable(
                name: "bloggers",
                schema: "campaigns");
        }
    }
}
